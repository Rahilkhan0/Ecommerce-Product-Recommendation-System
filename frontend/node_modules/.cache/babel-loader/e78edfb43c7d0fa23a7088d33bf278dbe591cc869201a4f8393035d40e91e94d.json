{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbaz Khan\\\\recommendation-system\\\\frontend\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\n// src/components/Search.js\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Search.css';\nimport Products from './Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  cart,\n  setCart,\n  handleAddToCart\n}) => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const productName = searchParams.get('query');\n  const navigate = useNavigate();\n  const getValidImageUrl = imageUrl => {\n    const imageUrls = imageUrl.split('|').map(url => url.trim());\n    for (const url of imageUrls) {\n      if (url) return url;\n    }\n    return 'https://via.placeholder.com/150';\n  };\n  const handleCardClick = product => {\n    console.log(product);\n    // Navigate to product detail page and pass product data\n    navigate(`/product-detail?query=${product.Name}`, {\n      state: {\n        product\n      }\n    });\n  };\n\n  /*   const handleAddToCart = (product) => {\r\n      const existingCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n  \r\n      // Check if the product is already in the cart\r\n      const isProductInCart = existingCart.some(item => item.ProdID === product.ProdID);\r\n  \r\n      if (!isProductInCart) {\r\n          // Add the new product to the cart\r\n          const updatedCart = [...existingCart, product];\r\n  \r\n          // Update state\r\n          //setCart(updatedCart);\r\n  \r\n          // Save the updated cart to localStorage\r\n          localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n      } else {\r\n          alert('Product is already in the cart!');\r\n      }\r\n  }; */\n\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      if (!productName) return;\n      setLoading(true);\n      setError('');\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:5000/content-recommendation?item_name=${productName}`);\n        setRecommendations(data);\n      } catch (error) {\n        setError('Failed to fetch recommendations. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n  }, [productName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Search Results for \\\"\", productName, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), recommendations.length === 0 && !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recommendations found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      items: recommendations,\n      handleAddToCart: handleAddToCart,\n      handleClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"9NJaBLUo+s0XD7pPA+w/QMs03S8=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","useNavigate","axios","Products","jsxDEV","_jsxDEV","Search","cart","setCart","handleAddToCart","_s","searchParams","recommendations","setRecommendations","loading","setLoading","error","setError","productName","get","navigate","getValidImageUrl","imageUrl","imageUrls","split","map","url","trim","handleCardClick","product","console","log","Name","state","fetchRecommendations","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","items","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Arbaz Khan/recommendation-system/frontend/src/components/Search.js"],"sourcesContent":["// src/components/Search.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom'; \r\nimport axios from 'axios';\r\nimport './Search.css';\r\nimport Products from './Products';\r\n\r\nconst Search = ({cart, setCart, handleAddToCart}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const productName = searchParams.get('query');\r\n  const navigate = useNavigate();\r\n\r\n  const getValidImageUrl = (imageUrl) => {\r\n    const imageUrls = imageUrl.split('|').map(url => url.trim());\r\n    for (const url of imageUrls) {\r\n      if (url) return url; \r\n    }\r\n    return 'https://via.placeholder.com/150'; \r\n  };\r\n\r\n  const handleCardClick = (product) => {\r\n    console.log(product);\r\n    // Navigate to product detail page and pass product data\r\n    navigate(`/product-detail?query=${product.Name}`, { state: { product } });\r\n  };\r\n\r\n/*   const handleAddToCart = (product) => {\r\n    const existingCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n    // Check if the product is already in the cart\r\n    const isProductInCart = existingCart.some(item => item.ProdID === product.ProdID);\r\n\r\n    if (!isProductInCart) {\r\n        // Add the new product to the cart\r\n        const updatedCart = [...existingCart, product];\r\n\r\n        // Update state\r\n        //setCart(updatedCart);\r\n\r\n        // Save the updated cart to localStorage\r\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    } else {\r\n        alert('Product is already in the cart!');\r\n    }\r\n}; */\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      if (!productName) return;\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        const { data } = await axios.get(`http://localhost:5000/content-recommendation?item_name=${productName}`);\r\n        setRecommendations(data);\r\n      } catch (error) {\r\n        setError('Failed to fetch recommendations. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchRecommendations();\r\n  }, [productName]);\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <h1>Search Results for \"{productName}\"</h1>\r\n      \r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {recommendations.length === 0 && !loading && !error && (\r\n        <p>No recommendations found</p>\r\n      )}\r\n        {<Products items={recommendations} handleAddToCart={handleAddToCart} handleClick={handleCardClick}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}